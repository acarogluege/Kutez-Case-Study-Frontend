{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesut\\\\Desktop\\\\Full Stack Assignment _v2\\\\Full Stack Assignment _v2\\\\Full Stack Assignment\\\\frontend\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  // This assumes your FastAPI server is running locally at port 8000\n  const API_URL = \"http://127.0.0.1:8080/products\";\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => setProducts(data)).catch(err => console.error(\"Error fetching products:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.gridContainer,\n    children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product\n    }, product.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nfunction ProductCard({\n  product\n}) {\n  _s2();\n  var _product$images;\n  // A local state to track which color is selected\n  // Adjust to your actual color keys if your JSON uses \"red\", \"blue\", \"green\", etc.\n  const colors = [{\n    label: \"Yellow Gold\",\n    value: \"yellow\",\n    hex: \"#E6CA97\"\n  }, {\n    label: \"White Gold\",\n    value: \"white\",\n    hex: \"#D9D9D9\"\n  }, {\n    label: \"Rose Gold\",\n    value: \"rose\",\n    hex: \"#E1A4A9\"\n  }];\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n\n  // Attempt to map the product images based on color, if your JSON has corresponding keys\n  // If you have images = { yellow: \"...\", white: \"...\", rose: \"...\" }, then do something like:\n  // const productImage = product.images[selectedColor.value];\n  // For simplicity, if your JSON is \"red/blue/green\", adapt the color array to match.\n  const productImage = ((_product$images = product.images) === null || _product$images === void 0 ? void 0 : _product$images[selectedColor.value]) || Object.values(product.images || {})[0]; // fallback if color key not found\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: productImage || \"https://via.placeholder.com/200\",\n      alt: product.name,\n      style: styles.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: product.name || \"Product Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.price,\n        children: product.price ? `$${product.price.toFixed(2)} USD` : \"$0.00 USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.colorContainer,\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedColor(color),\n          style: {\n            ...styles.colorButton,\n            backgroundColor: color.hex,\n            border: color.value === selectedColor.value ? \"2px solid #333\" : \"1px solid #ccc\"\n          },\n          children: color.label\n        }, color.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.popularity,\n        children: product.popularityScoreFormatted ? `${product.popularityScoreFormatted}/5` : \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s2(ProductCard, \"cbiYk9gBUTM7rJP/TFgrEnvYhGY=\");\n_c2 = ProductCard;\nconst styles = {\n  gridContainer: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n    gap: \"1.5rem\"\n  },\n  card: {\n    border: \"1px solid #ddd\",\n    borderRadius: 8,\n    padding: \"1rem\",\n    textAlign: \"center\",\n    fontFamily: \"Avenir, sans-serif\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"auto\",\n    objectFit: \"cover\",\n    marginBottom: \"1rem\"\n  },\n  info: {\n    marginTop: \"0.5rem\"\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 4\n  },\n  price: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 8\n  },\n  colorContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"0.5rem\",\n    marginBottom: 8\n  },\n  colorButton: {\n    cursor: \"pointer\",\n    borderRadius: 4,\n    padding: \"0.25rem 0.5rem\",\n    color: \"#000\"\n  },\n  popularity: {\n    fontSize: 14,\n    marginTop: 8\n  }\n};\nexport default ProductList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProductList\");\n$RefreshReg$(_c2, \"ProductCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","API_URL","fetch","then","res","json","data","catch","err","console","error","style","styles","gridContainer","children","map","product","ProductCard","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","_product$images","colors","label","value","hex","selectedColor","setSelectedColor","productImage","images","Object","values","card","src","alt","image","info","title","price","toFixed","colorContainer","color","onClick","colorButton","backgroundColor","border","popularity","popularityScoreFormatted","_c2","display","gridTemplateColumns","gap","borderRadius","padding","textAlign","fontFamily","width","height","objectFit","marginBottom","marginTop","fontSize","fontWeight","justifyContent","cursor","$RefreshReg$"],"sources":["C:/Users/mesut/Desktop/Full Stack Assignment _v2/Full Stack Assignment _v2/Full Stack Assignment/frontend/src/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  // This assumes your FastAPI server is running locally at port 8000\r\n  const API_URL = \"http://127.0.0.1:8080/products\";\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setProducts(data))\r\n      .catch((err) => console.error(\"Error fetching products:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.gridContainer}>\r\n      {products.map((product) => (\r\n        <ProductCard key={product.name} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductCard({ product }) {\r\n  // A local state to track which color is selected\r\n  // Adjust to your actual color keys if your JSON uses \"red\", \"blue\", \"green\", etc.\r\n  const colors = [\r\n    { label: \"Yellow Gold\", value: \"yellow\", hex: \"#E6CA97\" },\r\n    { label: \"White Gold\", value: \"white\", hex: \"#D9D9D9\" },\r\n    { label: \"Rose Gold\", value: \"rose\", hex: \"#E1A4A9\" }\r\n  ];\r\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\r\n\r\n  // Attempt to map the product images based on color, if your JSON has corresponding keys\r\n  // If you have images = { yellow: \"...\", white: \"...\", rose: \"...\" }, then do something like:\r\n  // const productImage = product.images[selectedColor.value];\r\n  // For simplicity, if your JSON is \"red/blue/green\", adapt the color array to match.\r\n  const productImage = product.images?.[selectedColor.value] \r\n                        || Object.values(product.images || {})[0]; // fallback if color key not found\r\n\r\n  return (\r\n    <div style={styles.card}>\r\n      <img \r\n        src={productImage || \"https://via.placeholder.com/200\"} \r\n        alt={product.name} \r\n        style={styles.image} \r\n      />\r\n\r\n      <div style={styles.info}>\r\n        <h2 style={styles.title}>{product.name || \"Product Title\"}</h2>\r\n\r\n        {/* Price */}\r\n        <p style={styles.price}>\r\n          {product.price \r\n            ? `$${product.price.toFixed(2)} USD` \r\n            : \"$0.00 USD\"}\r\n        </p>\r\n\r\n        {/* Color Picker */}\r\n        <div style={styles.colorContainer}>\r\n          {colors.map((color) => (\r\n            <button\r\n              key={color.value}\r\n              onClick={() => setSelectedColor(color)}\r\n              style={{\r\n                ...styles.colorButton,\r\n                backgroundColor: color.hex,\r\n                border: color.value === selectedColor.value \r\n                  ? \"2px solid #333\" \r\n                  : \"1px solid #ccc\"\r\n              }}\r\n            >\r\n              {color.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Popularity Score */}\r\n        <p style={styles.popularity}>\r\n          {product.popularityScoreFormatted \r\n            ? `${product.popularityScoreFormatted}/5` \r\n            : \"N/A\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  gridContainer: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n    gap: \"1.5rem\"\r\n  },\r\n  card: {\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: 8,\r\n    padding: \"1rem\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Avenir, sans-serif\"\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    objectFit: \"cover\",\r\n    marginBottom: \"1rem\"\r\n  },\r\n  info: {\r\n    marginTop: \"0.5rem\"\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    marginBottom: 4\r\n  },\r\n  price: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8\r\n  },\r\n  colorContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    gap: \"0.5rem\",\r\n    marginBottom: 8\r\n  },\r\n  colorButton: {\r\n    cursor: \"pointer\",\r\n    borderRadius: 4,\r\n    padding: \"0.25rem 0.5rem\",\r\n    color: \"#000\"\r\n  },\r\n  popularity: {\r\n    fontSize: 14,\r\n    marginTop: 8\r\n  }\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}